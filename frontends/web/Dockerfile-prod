# build environment
FROM node:11-alpine as builder

WORKDIR /usr/src/app
ENV PATH /usr/src/app/node_modules/.bin:$PATH

# install only needed dependecies
COPY package.json /usr/src/app/package.json
RUN npm install --only=production

# copy the actual app (node_modules dockerignored)
COPY . /usr/src/app

# run build
RUN npm run build

# production environment
FROM nginx:1.15-alpine

# # replace default nginx config with custom
# RUN rm -rf /etc/nginx/conf.d
# COPY conf /etc/nginx

# # copy our built app to nginx
# COPY --from=builder /usr/src/app/build /usr/share/nginx/html

# # daemon off so docker is happy, serve files according to config
# CMD ["nginx", "-g", "daemon off;"]

# Dockerfile - alpine
# https://github.com/openresty/docker-openresty

# ARG RESTY_IMAGE_BASE="alpine"
# ARG RESTY_IMAGE_TAG="3.8"

# FROM openresty/openresty:alpine

# Add additional binaries into PATH for convenience
# ENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin

# Copy nginx configuration files
# COPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
# COPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf

# replace default nginx config with custom
# RUN rm -rf /etc/nginx/conf.d
# COPY conf /etc/nginx

# copy our built app to nginx
COPY --from=builder /usr/src/app/build /srv/www/static

CMD ["nginx", "-g", "daemon off;"]

# Use SIGQUIT instead of default SIGTERM to cleanly drain requests
# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls
STOPSIGNAL SIGQUIT